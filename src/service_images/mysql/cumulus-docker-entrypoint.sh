#!/bin/bash
set -e

if [ "$CUMULUS_MODE" == "INIT" ]
then
  # Run the base image's docker-entrypoint, to initialize myslq stuff
  /usr/local/bin/docker-entrypoint.sh

  # Copy default config into the mounted drive
  cp -r /etc/mysql /cumulus/

  CUMULUS_MYSQL_CONFIG_FILE="/cumulus/mysql/conf.d/cumulus.cnf"

  # Check if the cumulus config file exists
  if [ ! -f "${CUMULUS_MYSQL_CONFIG_FILE}" ]; then
      touch ${CUMULUS_MYSQL_CONFIG_FILE}
      echo "#This file is generated by Cumulus" >> ${CUMULUS_MYSQL_CONFIG_FILE}
      echo "[mysqld]" >> ${CUMULUS_MYSQL_CONFIG_FILE}
      # This is required for Django - I think the underlying reason is that the
      # mysql image uses mysql 8.0, which the mysqlclient python module doesn't support
      echo "#This is required for Django, because the mysqlclient python module currently doesn't support MySQL 8.0" >> ${CUMULUS_MYSQL_CONFIG_FILE}
      echo "default_authentication_plugin=mysql_native_password" >> ${CUMULUS_MYSQL_CONFIG_FILE}
  fi
else
  # Link the mysql config location to the mounted drive so that the mounted
  # drive is the source of truth (and users can modify the config on their host machine)
  rm -rf /etc/mysql
  ln -s /cumulus/mysql /etc/mysql

  # Run the base image's docker-entrypoint, with mysqld (so that it will start the server)
  /usr/local/bin/docker-entrypoint.sh mysqld
fi
